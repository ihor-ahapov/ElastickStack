version: "3.5"

services:
  php_fpm:
    build: .
    container_name: test_php_fpm
    working_dir: /usr/share/nginx/test
    networks:
    - test
    volumes:
    - ./:/usr/share/nginx/test

  nginx:
    image: nginx:1.15
    container_name: test_nginx
    working_dir: /usr/share/nginx/test
    networks:
    - test
    ports:
    - "8080:80"
    volumes:
    - ./:/usr/share/nginx/test
    - ./docker/nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf

  mysql:
    image: mysql:5.7
    container_name: test_mysql
    networks:
    - test
    ports:
    - "33060:3306"
    environment:
    - MYSQL_DATABASE=test
    - MYSQL_ROOT_PASSWORD=root
    - MYSQL_USER=test
    - MYSQL_PASSWORD=test

  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.5.1
    container_name: es01
    environment:
    - node.name=es01
    - cluster.name=es-docker-cluster
    - discovery.seed_hosts=es02
    - cluster.initial_master_nodes=es01,es02
    - bootstrap.memory_lock=true
    - "ES_JAVA_OPTS=-Xmx128m -Xms128m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
    - data01:/usr/share/elasticsearch/data
    ports:
    - 9200:9200
    networks:
    - test

  es02:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.5.1
    container_name: es02
    environment:
    - node.name=es02
    - cluster.name=es-docker-cluster
    - discovery.seed_hosts=es01
    - cluster.initial_master_nodes=es01,es02
    - bootstrap.memory_lock=true
    - "ES_JAVA_OPTS=-Xmx128m -Xms128m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
    - data02:/usr/share/elasticsearch/data
    networks:
    - test

  kibana:
    image: docker.elastic.co/kibana/kibana:7.5.1
    container_name: kibana
    ports:
    - "5601:5601"
    networks:
    - test
    environment:
      ELASTICSEARCH_HOSTS: http://es01:9200

  logstash:
    image: docker.elastic.co/logstash/logstash:7.5.1
    container_name: logstash
    volumes:
    - type: bind
      source: ./docker/logstash/config/logstash.yml
      target: /usr/share/logstash/config/logstash.yml
      read_only: true
    - type: bind
      source: ./docker/logstash/pipeline
      target: /usr/share/logstash/pipeline
      read_only: true
    ports:
    - "5000:5000"
    - "5044:5044"
    - "9600:9600"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - test
    depends_on:
    - es01

  filebeat:
    image: docker.elastic.co/beats/filebeat:7.5.1
    container_name: filebeat
    volumes:
    - ./storage/logs:/test
    - ./docker/filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml
#    - ./docker/filebeat/tmp:/tmp/filebeat
    networks:
    - test
    depends_on:
    - logstash

#todo write all in the one volume style
volumes:
  data01:
    driver: local
  data02:
    driver: local

networks:
  test:
    driver: bridge